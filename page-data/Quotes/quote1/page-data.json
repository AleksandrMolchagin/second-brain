{
    "componentChunkName": "component---packages-gatsby-theme-kb-src-templates-topic-js",
    "path": "/Quotes/quote1",
    "result": {"data":{"file":{"childMdx":{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", null, \"Disease is contagious, health is not\"), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"\\\"Disease is contagious, health is not; the same is valid for deception and truth. This is why deception spreads rapidly but truth spreads slowly.\\\"\")), mdx(\"p\", null, \" \\u2013 \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, mdx(\"em\", {\n    parentName: \"strong\"\n  }, \"Pyotr Chaadayev, a Russian philosopher.\"))), mdx(\"p\", null, mdx(\"em\", {\n    parentName: \"p\"\n  }, \"(orig: \\\"\\u0411\\u043E\\u043B\\u0435\\u0437\\u043D\\u044C \\u043E\\u0434\\u043D\\u0430 \\u043B\\u0438\\u0448\\u044C \\u0437\\u0430\\u0440\\u0430\\u0437\\u0438\\u0442\\u0435\\u043B\\u044C\\u043D\\u0430, \\u0437\\u0434\\u043E\\u0440\\u043E\\u0432\\u044C\\u0435 \\u043D\\u0435 \\u0437\\u0430\\u0440\\u0430\\u0437\\u0438\\u0442\\u0435\\u043B\\u044C\\u043D\\u043E; \\u0442\\u043E \\u0436\\u0435 \\u0441\\u0430\\u043C\\u043E\\u0435 \\u0441 \\u0437\\u0430\\u0431\\u043B\\u0443\\u0436\\u0434\\u0435\\u043D\\u0438\\u0435\\u043C \\u0438 \\u0438\\u0441\\u0442\\u0438\\u043D\\u043E\\u0439. \\u0412\\u043E\\u0442 \\u043F\\u043E\\u0447\\u0435\\u043C\\u0443 \\u0437\\u0430\\u0431\\u043B\\u0443\\u0436\\u0434\\u0435\\u043D\\u0438\\u044F \\u0440\\u0430\\u0441\\u043F\\u0440\\u043E\\u0441\\u0442\\u0440\\u0430\\u043D\\u044F\\u044E\\u0442\\u0441\\u044F \\u0431\\u044B\\u0441\\u0442\\u0440\\u043E, \\u0430 \\u0438\\u0441\\u0442\\u0438\\u043D\\u0430 \\u0442\\u0430\\u043A \\u043C\\u0435\\u0434\\u043B\\u0435\\u043D\\u043D\\u043E.\\\")\")), mdx(\"hr\", null), mdx(\"h5\", null, \"Links: \", mdx(\"a\", {\n    parentName: \"h5\",\n    \"href\": \"/Quotes\",\n    \"title\": \"Quotes\"\n  }, \"[[Quotes]]\"), \"\"), mdx(\"h5\", null, \"Source: \", mdx(\"a\", {\n    parentName: \"h5\",\n    \"href\": \"/Pyotr-Chaadayev\",\n    \"title\": \"Pyotr Chaadayev\"\n  }, \"[[Pyotr Chaadayev]]\"), \"\"), mdx(\"h5\", null, \"Date: Oct 8, 2021\"));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"title":"","private":false},"tableOfContents":{"items":[{"url":"#disease-is-contagious-health-is-not","title":"Disease is contagious, health is not","items":[{"items":[{"items":[{"items":[{"url":"#links-quotes","title":"Links: [Quotes]"},{"url":"#source-pyotr-chaadayev","title":"Source: [Pyotr Chaadayev]"},{"url":"#date-oct-8-2021","title":"Date: Oct 8, 2021"}]}]}]}]}]},"outboundReferences":[{"contextLine":"##### Links: [[Quotes]]","targetAnchor":null,"refWord":"Quotes","target":{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", null, \"Quotes\"), mdx(\"p\", null, \"This is the place where I keep all the quotes I like.\"), mdx(\"hr\", null), mdx(\"h5\", null, \"Date: Dec 1, 2021\"));\n}\n;\nMDXContent.isMDXComponent = true;","parent":{"id":"b5044cac-77e7-5a5b-a2b9-f0a578a2234c","fields":{"slug":"/Quotes/intro_file","title":"Quotes"}}}}],"inboundReferences":[]},"fields":{"slug":"/Quotes/quote1","title":"Disease is contagious, health is not"}}},"pageContext":{"id":"a363392e-7f07-5f31-ab87-56570520814b","wikiLinkLabelTemplate":"[[{{ title }}]]","refWordMdxSlugDict":{"Quotes":"Quotes/intro_file"},"tocTypes":["sidebar"]}},
    "staticQueryHashes": ["2221750479","2380733210","2768355698","63159454","847517413"]}