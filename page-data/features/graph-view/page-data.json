{
    "componentChunkName": "component---packages-gatsby-theme-kb-src-templates-topic-js",
    "path": "/features/graph-view",
    "result": {"data":{"file":{"childMdx":{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", null, \"Graph View\"), mdx(\"p\", null, \"Click the 'Show Graph Visualisation' button on top-right to show a graph visualising the relationships  - which are established by \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/wiki-links\",\n    \"title\": \"wiki-links\"\n  }, \"[[wiki-links]]\"), \" - of your notes. You can even searc your notes and get result nodes highlighted as you search.\"), mdx(\"p\", null, \"The graph is rendered by \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/hikerpig/note-graph\"\n  }, \"note-graph\"), \".\"), mdx(\"p\", null, mdx(\"img\", {\n    parentName: \"p\",\n    \"src\": \"https://i.loli.net/2020/12/07/e9iKhFIvqcDOdCz.png\",\n    \"alt\": null\n  })));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"title":"","private":false},"tableOfContents":{"items":[{"url":"#graph-view","title":"Graph View"}]},"outboundReferences":[{"contextLine":"Click the 'Show Graph Visualisation' button on top-right to show a graph visualising the relationships  - which are established by [[wiki-links]] - of your notes. You can even searc your notes and get result nodes highlighted as you search.","targetAnchor":null,"refWord":"wiki-links","target":{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", null, \"Wiki Link\"), mdx(\"p\", null, \"A wiki-link is a link text wrapped inside double brackets \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"[[]]\"), \".\"), mdx(\"h2\", null, \"Some further details\"), mdx(\"h3\", null, \"Anchor reference\"), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"NOTICE: This is non-standard for wiki links, but I found it quite suit to my needs so I implement it in gatsby-project-kb, and Obsidian has this support, too.\")), mdx(\"p\", null, \"You can refer to a topic's specific section by anchor text, which is after the hashtag \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"#\"), \".\"), mdx(\"p\", null, \"For example, for a target topic with the structure as below.\"), mdx(\"div\", {\n    \"className\": \"gatsby-highlight\",\n    \"data-language\": \"text\"\n  }, mdx(\"pre\", {\n    parentName: \"div\",\n    \"className\": \"language-text\"\n  }, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-text\"\n  }, \"# header 1\\n## header 2\"))), mdx(\"p\", null, \"It's possible to link to the second header with \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"[[topic#header 2]]\"), \". The target url will be \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"topic#header-2\"), \", with the anchor text processed by \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"slugify\"), \".\"));\n}\n;\nMDXContent.isMDXComponent = true;","parent":{"id":"6877fa2a-fb86-5013-b41a-c516bdd04d71","fields":{"slug":"/features/wiki-links","title":"Wiki Link"}}}}],"inboundReferences":[{"contextLine":"- A nice interactive [[graph-view]] visualizing the relationships of your notes.","referrer":{"parent":{"id":"f969a8a5-4ab7-5f80-ab4a-1a298f352f21","fields":{"slug":"/readme","title":"Second Brain âœ¨"}}}}]},"fields":{"slug":"/features/graph-view","title":"Graph View"}}},"pageContext":{"id":"1cc1a393-35ff-5a37-89a5-2adab5cec1a8","wikiLinkLabelTemplate":"[[{{ title }}]]","refWordMdxSlugDict":{"wiki-links":"features/wiki-links"},"tocTypes":["sidebar"]}},
    "staticQueryHashes": ["2221750479","2380733210","2768355698","63159454","847517413"]}